// Generated by CoffeeScript 1.4.0
(function() {
  var ElementChain,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = ElementChain = (function(_super) {

    __extends(ElementChain, _super);

    /*
    */


    function ElementChain(_nodeName, parent) {
      this._nodeName = _nodeName;
      this.parent = parent;
      this._search = [];
    }

    /*
    */


    ElementChain.prototype.toString = function() {
      var chain;
      chain = [this.parent.toString()];
      chain.push(this._nodeName);
      if (this._search.length) {
        chain.push("[" + (this._search.join(' ')) + "]");
      }
      if (this._index !== void 0) {
        chain.push("[" + this._index + "]");
      }
      return chain.join("");
    };

    /*
    */


    ElementChain.prototype.contains = function(name, value) {
      return this._addSearch("contains(" + name + ",'" + value + "')");
    };

    /*
    */


    ElementChain.prototype.eq = function(name, value) {
      return this.op(name, "=", value);
    };

    /*
    */


    ElementChain.prototype.neq = function(name, value) {
      return this.op(name, "!=", value);
    };

    /*
    */


    ElementChain.prototype.gt = function(name, value) {
      return this.op(name, ">", value);
    };

    /*
    */


    ElementChain.prototype.lt = function(name, value) {
      return this.op(name, "<", value);
    };

    /*
    */


    ElementChain.prototype.gte = function(name, value) {
      return this.op(name, ">=", value);
    };

    /*
    */


    ElementChain.prototype.lte = function(name, value) {
      return this.op(name, "<=", value);
    };

    /*
    */


    ElementChain.prototype.op = function(name, op, value) {
      return this._addSearch("" + name + op + "'" + value + "'");
    };

    /*
    */


    ElementChain.prototype.or = function() {
      return this._addSearch("or");
    };

    /*
    */


    ElementChain.prototype.and = function() {
      return this._addSearch("and");
    };

    /*
    */


    ElementChain.prototype.index = function(value) {
      this._index = value;
      return this;
    };

    /*
    */


    ElementChain.prototype.search = function(value) {
      this._search = [value];
      return this;
    };

    /*
       registers this chain to the
    */


    ElementChain.prototype.register = function(name) {
      this.root().register(name, this);
      return this;
    };

    /*
    */


    ElementChain.prototype.root = function() {
      var p;
      p = this.parent;
      while (p.parent) {
        p = p.parent;
      }
      return p;
    };

    /*
       clones this chain
    */


    ElementChain.prototype.clone = function() {
      var chain;
      chain = new ElementChain(this._nodeName, this.parent);
      chain._search = this._search.concat();
      chain._index = this._index;
      return chain;
    };

    /*
    */


    ElementChain.prototype._newChain = function(nodeName, parent) {
      return new ElementChain(nodeName, this);
    };

    /*
    */


    ElementChain.prototype._addSearch = function(search) {
      this._search.push(search);
      return this;
    };

    return ElementChain;

  })(require("./base"));

}).call(this);
